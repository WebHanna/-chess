{"version":3,"sources":["proj.min.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_Game","_Game2","start","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_lodash","_lodash2","_Board","_Board2","_Pawn","_Pawn2","_Rook","_Rook2","_Horse","_Horse2","_Officer","_Officer2","_Queen","_Queen2","_King","_King2","Game","previousState","board","check","mate","turn","defaultFiguresState","x","y","type","color","cancelButton","document","getElementById","_this","renderBoard","setDefaultState","savePreviousState","addEventListener","cancelStep","_this2","forEach","initialFigure","cells","row","cell","setFigure","getInitialFigure","state","_this3","newFiguresArr","figure","element","remove","push","setPreviousState","cloneDeep","removeAvailable","checkGameStatus","checkPawnsToChange","_this4","kingCell","kingAvailablePositions","opponentPositions","searchNextAvailablePosition","nextAvailableCells","findOpponentAvailablePositions","isKingAttacked","find","game","__WEBPACK_AMD_DEFINE_RESULT__","global","apply","func","thisArg","args","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","split","asciiWords","match","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","object","undefined","basePropertyOf","baseReduce","baseSortBy","comparer","sort","current","baseTimes","n","baseToPairs","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","getValue","hasUnicode","reHasUnicode","test","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","data","next","done","mapToArray","map","size","overArg","transform","arg","replaceHolders","PLACEHOLDER","safeGet","setToArray","set","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","lastIndex","unicodeWords","reUnicodeWord","VERSION","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","join","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","self","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","require","binding","e","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","end","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","add","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","String","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","keys","baseAssignIn","keysIn","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","isObject","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","subValue","keysFunc","getAllKeysIn","getAllKeys","baseConforms","baseConformsTo","baseDelay","wait","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","pattern","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","isPlainObject","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","toString","castSlice","buffer","slice","allocUnsafe","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneRegExp","regexp","exec","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","fn","Ctor","isBind","arguments","createCtor","createCaseFirst","methodName","charAt","trailing","createCompounder","callback","words","deburr","replace","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","Math","precision","pair","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","name","message","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","input","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","proto","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduce","reduceRight","reject","negate","sample","sampleSize","shuffle","some","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","timeWaiting","maxing","maxWait","shouldInvoke","now","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","resolver","memoized","Cache","once","rest","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeepWith","conformsTo","isBoolean","isElement","isEmpty","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","isNil","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","sign","remainder","valueOf","isBinary","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","prop","setWith","isArrLike","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","capitalize","upperFirst","toLowerCase","endsWith","position","escape","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trim","trimEnd","trimStart","truncate","omission","search","substring","newEnd","unescape","cond","conforms","constant","defaultTo","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","Date","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","Symbol","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","ceil","floor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","resolve","ctorString","charCodeAt","quote","subString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","webpackPolyfill","deprecate","children","_BoardCell","_BoardCell2","_FiguresManager","_FiguresManager2","Board","selectedFigure","isBoardBlocked","cellToSwitch","pawnToChange","freezeClicks","beatWhiteBoard","chooseWhite","beatBlackBoard","chooseBlack","getCells","appendChild","white","black","arr","getRow","firstColor","secondColor","BoardCell","createCell","available","createElement","className","dataset","style","left","top","setCellOnClick","renderInitialFigure","targetCell","currentFigure","currentCell","findCellByCoords","removeFigureFromCell","moveFigure","turnEnd","targetFigure","isAvailable","_currentFigureCell","findFigureByCoords","beatFigure","currentFigureCell","setAvailableNextCells","setAvailable","classList","figureDiv","backgroundPosition","setFigureOnClick","FiguresManager","beatedBlackFigures","beatedWhiteFigures","blackAvailable","whiteAvailable","renderFigureOnBeatBoard","removeFigureFromBoard","isFirstStep","rows","isWhite","boardLength","_game$board$cellToSwi","renderOnBoard","unfreezeClicks","figuresManager","Pawn","getPosition","forwardCells","forwardCell","otherCells","toBeat","availableCells","item","getFirsForwardCell","toBeatArr","Rook","findAll","xArr","yArr","getAvailableOnly","_i","_i2","_i3","Horse","horseGCells","firstCell","secondCell","thirdCell","fourthCell","fifthCell","sixthCell","seventhCell","eightCell","Officer","r","_r","_cell","xRightToTop","_r2","_cell2","xLeftToTop","_r3","_cell3","Queen","rookCells","findAllRook","officerCells","King","withoutOpponent","opponentAvailablePositions","availableArr","delCells","allAvailableSells","opponentCell","choosenCell","cell2","existItem","item2"],"mappings":"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IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAC1BC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACvEC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACxDC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IACzCC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACtFC,IAAU,IAAMC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IAAKC,IAAU,IACtFC,IAAU,IAAMC,IAAU,IAC1BC,IAAU,IA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","file":"proj.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"n\"] = factory();\n\telse\n\t\troot[\"n\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Game = __webpack_require__(1);\n\t\n\tvar _Game2 = _interopRequireDefault(_Game);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_Game2.default.start();\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _lodash = __webpack_require__(2);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _Board = __webpack_require__(4);\n\t\n\tvar _Board2 = _interopRequireDefault(_Board);\n\t\n\tvar _Pawn = __webpack_require__(7);\n\t\n\tvar _Pawn2 = _interopRequireDefault(_Pawn);\n\t\n\tvar _Rook = __webpack_require__(8);\n\t\n\tvar _Rook2 = _interopRequireDefault(_Rook);\n\t\n\tvar _Horse = __webpack_require__(9);\n\t\n\tvar _Horse2 = _interopRequireDefault(_Horse);\n\t\n\tvar _Officer = __webpack_require__(10);\n\t\n\tvar _Officer2 = _interopRequireDefault(_Officer);\n\t\n\tvar _Queen = __webpack_require__(11);\n\t\n\tvar _Queen2 = _interopRequireDefault(_Queen);\n\t\n\tvar _King = __webpack_require__(12);\n\t\n\tvar _King2 = _interopRequireDefault(_King);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Game = function () {\n\t  function Game() {\n\t    _classCallCheck(this, Game);\n\t\n\t    this.previousState = null;\n\t    this.board = new _Board2.default();\n\t    this.check = null;\n\t    this.mate = null;\n\t    this.turn = 'white';\n\t    this.defaultFiguresState = [{ x: 0, y: 0, type: 'Rook', color: 'white', id: 0 }, { x: 1, y: 0, type: 'Horse', color: 'white', id: 13 }, { x: 2, y: 0, type: 'Officer', color: 'white', id: 10 }, { x: 4, y: 0, type: 'Queen', color: 'white', id: 11 }, { x: 3, y: 0, type: 'King', color: 'white', id: 12 }, { x: 5, y: 0, type: 'Officer', color: 'white', id: 13 }, { x: 6, y: 0, type: 'Horse', color: 'white', id: 14 }, { x: 7, y: 0, type: 'Rook', color: 'white', id: 15 }, { x: 0, y: 1, type: 'Pawn', color: 'white', id: 1 }, { x: 1, y: 1, type: 'Pawn', color: 'white', id: 2 }, { x: 2, y: 1, type: 'Pawn', color: 'white', id: 3 }, { x: 3, y: 1, type: 'Pawn', color: 'white', id: 5 }, { x: 4, y: 1, type: 'Pawn', color: 'white', id: 6 }, { x: 5, y: 1, type: 'Pawn', color: 'white', id: 7 }, { x: 6, y: 1, type: 'Pawn', color: 'white', id: 8 }, { x: 7, y: 1, type: 'Pawn', color: 'white', id: 9 }, { x: 0, y: 6, type: 'Pawn', color: 'black', id: 4 }, { x: 1, y: 6, type: 'Pawn', color: 'black', id: 16 }, { x: 2, y: 6, type: 'Pawn', color: 'black', id: 17 }, { x: 3, y: 6, type: 'Pawn', color: 'black', id: 18 }, { x: 4, y: 6, type: 'Pawn', color: 'black', id: 19 }, { x: 5, y: 6, type: 'Pawn', color: 'black', id: 20 }, { x: 6, y: 6, type: 'Pawn', color: 'black', id: 21 }, { x: 7, y: 6, type: 'Pawn', color: 'black', id: 22 }, { x: 2, y: 7, type: 'Officer', color: 'black', id: 26 }, { x: 1, y: 7, type: 'Horse', color: 'black', id: 23 }, { x: 0, y: 7, type: 'Rook', color: 'black', id: 24 }, { x: 4, y: 7, type: 'Queen', color: 'black', id: 25 }, { x: 3, y: 7, type: 'King', color: 'black', id: 27 }, { x: 5, y: 7, type: 'Officer', color: 'black', id: 28 }, { x: 6, y: 7, type: 'Horse', color: 'black', id: 29 }, { x: 7, y: 7, type: 'Rook', color: 'black', id: 30 }];\n\t    this.cancelButton = document.getElementById('cancelButton');\n\t  }\n\t\n\t  _createClass(Game, [{\n\t    key: 'start',\n\t    value: function start() {\n\t      var _this = this;\n\t\n\t      this.board.renderBoard();\n\t      this.setDefaultState();\n\t      this.savePreviousState();\n\t\n\t      this.cancelButton.addEventListener('click', function () {\n\t        _this.cancelStep();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setDefaultState',\n\t    value: function setDefaultState() {\n\t      var _this2 = this;\n\t\n\t      this.defaultFiguresState.forEach(function (initialFigure) {\n\t        _this2.board.cells.forEach(function (row) {\n\t          row.forEach(function (cell) {\n\t            if (cell.x === initialFigure.x && cell.y === initialFigure.y) {\n\t              cell.setFigure(_this2.getInitialFigure(initialFigure));\n\t            }\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setPreviousState',\n\t    value: function setPreviousState(state) {\n\t      var _this3 = this;\n\t\n\t      state.forEach(function (initialFigure) {\n\t        _this3.board.cells.forEach(function (row) {\n\t          row.forEach(function (cell) {\n\t            if (cell.x === initialFigure.x && cell.y === initialFigure.y) {\n\t              cell.setFigure(_this3.getInitialFigure(initialFigure));\n\t            }\n\t          });\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getInitialFigure',\n\t    value: function getInitialFigure(initialFigure) {\n\t      if (initialFigure.type === 'Pawn') {\n\t        return new _Pawn2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      } else if (initialFigure.type === 'Rook') {\n\t        return new _Rook2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      } else if (initialFigure.type === 'Officer') {\n\t        return new _Officer2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      } else if (initialFigure.type === 'Queen') {\n\t        return new _Queen2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      } else if (initialFigure.type === 'King') {\n\t        return new _King2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      } else if (initialFigure.type === 'Horse') {\n\t        return new _Horse2.default(initialFigure.color, initialFigure.x, initialFigure.y, initialFigure.id);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'cancelStep',\n\t    value: function cancelStep() {\n\t\n\t      if (!this.previousState) return;\n\t\n\t      this.board = this.previousState.board;\n\t      this.turn = this.previousState.turn;\n\t\n\t      var newFiguresArr = [];\n\t\n\t      this.board.cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          if (cell.figure) {\n\t            cell.figure.element.remove();\n\t\n\t            newFiguresArr.push({\n\t              x: cell.figure.x, y: cell.figure.y,\n\t              type: cell.figure.type,\n\t              color: cell.figure.color,\n\t              id: cell.figure.id\n\t            });\n\t          }\n\t        });\n\t      });\n\t\n\t      this.setPreviousState(newFiguresArr);\n\t    }\n\t  }, {\n\t    key: 'savePreviousState',\n\t    value: function savePreviousState() {\n\t      this.previousState = {\n\t        board: _lodash2.default.cloneDeep(this.board),\n\t        turn: this.turn\n\t      };\n\t    }\n\t  }, {\n\t    key: 'turnEnd',\n\t    value: function turnEnd() {\n\t      this.board.cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          cell.removeAvailable();\n\t        });\n\t      });\n\t\n\t      this.checkGameStatus();\n\t\n\t      this.board.checkPawnsToChange();\n\t\n\t      if (this.turn === 'white') {\n\t        this.turn = 'black';\n\t      } else {\n\t        this.turn = 'white';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'checkGameStatus',\n\t    value: function checkGameStatus() {\n\t      var _this4 = this;\n\t\n\t      var kingCell = void 0,\n\t          kingAvailablePositions = void 0,\n\t          opponentPositions = void 0;\n\t\n\t      this.board.cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          if (cell.figure && cell.figure.type === 'King' && cell.figure.color !== _this4.turn) {\n\t            kingCell = cell;\n\t          }\n\t        });\n\t      });\n\t\n\t      if (kingCell) {\n\t        kingCell.figure.searchNextAvailablePosition(this.board.cells);\n\t\n\t        kingAvailablePositions = kingCell.figure.nextAvailableCells;\n\t        opponentPositions = kingCell.figure.findOpponentAvailablePositions(this.board.cells);\n\t\n\t        if (this.isKingAttacked(kingCell, opponentPositions) && kingAvailablePositions.length === 0) {\n\t          this.mate = this.turn;\n\t        } else if (this.isKingAttacked(kingCell, opponentPositions)) {\n\t          this.check = this.turn;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isKingAttacked',\n\t    value: function isKingAttacked(kingCell, opponentPositions) {\n\t      return !!opponentPositions.find(function (cell) {\n\t        return kingCell.x === cell.x && kingCell.y === cell.y;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return Game;\n\t}();\n\t\n\tvar game = new Game();\n\t\n\texports.default = game;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * Lodash <https://lodash.com/>\n\t * Copyright JS Foundation and other contributors <https://js.foundation/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.17.10';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Error message constants. */\n\t  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n\t      FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the maximum memoize cache size. */\n\t  var MAX_MEMOIZE_SIZE = 500;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for cloning. */\n\t  var CLONE_DEEP_FLAG = 1,\n\t      CLONE_FLAT_FLAG = 2,\n\t      CLONE_SYMBOLS_FLAG = 4;\n\t\n\t  /** Used to compose bitmasks for value comparisons. */\n\t  var COMPARE_PARTIAL_FLAG = 1,\n\t      COMPARE_UNORDERED_FLAG = 2;\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var WRAP_BIND_FLAG = 1,\n\t      WRAP_BIND_KEY_FLAG = 2,\n\t      WRAP_CURRY_BOUND_FLAG = 4,\n\t      WRAP_CURRY_FLAG = 8,\n\t      WRAP_CURRY_RIGHT_FLAG = 16,\n\t      WRAP_PARTIAL_FLAG = 32,\n\t      WRAP_PARTIAL_RIGHT_FLAG = 64,\n\t      WRAP_ARY_FLAG = 128,\n\t      WRAP_REARG_FLAG = 256,\n\t      WRAP_FLIP_FLAG = 512;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 800,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', WRAP_ARY_FLAG],\n\t    ['bind', WRAP_BIND_FLAG],\n\t    ['bindKey', WRAP_BIND_KEY_FLAG],\n\t    ['curry', WRAP_CURRY_FLAG],\n\t    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n\t    ['flip', WRAP_FLIP_FLAG],\n\t    ['partial', WRAP_PARTIAL_FLAG],\n\t    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n\t    ['rearg', WRAP_REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      asyncTag = '[object AsyncFunction]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      domExcTag = '[object DOMException]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      nullTag = '[object Null]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      proxyTag = '[object Proxy]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      undefinedTag = '[object Undefined]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n\t      reUnescapedHtml = /[&<>\"']/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match words composed of alphanumeric characters. */\n\t  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n\t  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n\t      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n\t      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n\t      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reUnicodeWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n\t    rsUpper + '+' + rsOptContrUpper,\n\t    rsOrdUpper,\n\t    rsOrdLower,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map Latin Unicode letters to basic Latin letters. */\n\t  var deburredLetters = {\n\t    // Latin-1 Supplement block.\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss',\n\t    // Latin Extended-A block.\n\t    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n\t    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n\t    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n\t    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n\t    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n\t    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n\t    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n\t    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n\t    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n\t    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n\t    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n\t    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n\t    '\\u0134': 'J',  '\\u0135': 'j',\n\t    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n\t    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n\t    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n\t    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n\t    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n\t    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n\t    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n\t    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n\t    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n\t    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n\t    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n\t    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n\t    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n\t    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n\t    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n\t    '\\u0174': 'W',  '\\u0175': 'w',\n\t    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n\t    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n\t    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n\t    '\\u0132': 'IJ', '\\u0133': 'ij',\n\t    '\\u0152': 'Oe', '\\u0153': 'oe',\n\t    '\\u0149': \"'n\", '\\u017f': 's'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\"\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      // Use `util.types` for Node.js 10+.\n\t      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\t\n\t      if (types) {\n\t        return types;\n\t      }\n\t\n\t      // Legacy `process.binding('util')` for Node.js < 10.\n\t      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array == null ? 0 : array.length;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array == null ? 0 : array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Gets the size of an ASCII `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  var asciiSize = baseProperty('length');\n\t\n\t  /**\n\t   * Converts an ASCII `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function asciiToArray(string) {\n\t    return string.split('');\n\t  }\n\t\n\t  /**\n\t   * Splits an ASCII `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function asciiWords(string) {\n\t    return string.match(reAsciiWord) || [];\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    return value === value\n\t      ? strictIndexOf(array, value, fromIndex)\n\t      : baseFindIndex(array, baseIsNaN, fromIndex);\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a `cache` value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        ++result;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n\t   * letters to basic Latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n\t   */\n\t  function hasUnicode(string) {\n\t    return reHasUnicode.test(string);\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains a word composed of Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a word is found, else `false`.\n\t   */\n\t  function hasUnicodeWord(string) {\n\t    return reHasUnicodeWord.test(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key`, unless `key` is \"__proto__\".\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function safeGet(object, key) {\n\t    return key == '__proto__'\n\t      ? undefined\n\t      : object[key];\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.indexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.lastIndexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictLastIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex + 1;\n\t    while (index--) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeSize(string)\n\t      : asciiSize(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeToArray(string)\n\t      : asciiToArray(string);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /**\n\t   * Gets the size of a Unicode `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function unicodeSize(string) {\n\t    var result = reUnicode.lastIndex = 0;\n\t    while (reUnicode.test(string)) {\n\t      ++result;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts a Unicode `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function unicodeToArray(string) {\n\t    return string.match(reUnicode) || [];\n\t  }\n\t\n\t  /**\n\t   * Splits a Unicode `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function unicodeWords(string) {\n\t    return string.match(reUnicodeWord) || [];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  var runInContext = (function runInContext(context) {\n\t    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = Array.prototype,\n\t        funcProto = Function.prototype,\n\t        objectProto = Object.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = funcProto.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var nativeObjectToString = objectProto.toString;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n\t        symIterator = Symbol ? Symbol.iterator : undefined,\n\t        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t    var defineProperty = (function() {\n\t      try {\n\t        var func = getNative(Object, 'defineProperty');\n\t        func({}, '', {});\n\t        return func;\n\t      } catch (e) {}\n\t    }());\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = Date.now,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array and iteratees accept only\n\t     * one argument. The heuristic for whether a section qualifies for shortcut\n\t     * fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} proto The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(proto) {\n\t        if (!isObject(proto)) {\n\t          return {};\n\t        }\n\t        if (objectCreate) {\n\t          return objectCreate(proto);\n\t        }\n\t        object.prototype = proto;\n\t        var result = new object;\n\t        object.prototype = undefined;\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n\t     * following template settings to use alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      var result = this.has(key) && delete this.__data__[key];\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      this.size += this.has(key) ? 0 : 1;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      --this.size;\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        ++this.size;\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.size = 0;\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      var result = getMapData(this, key)['delete'](key);\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      var data = getMapData(this, key),\n\t          size = data.size;\n\t\n\t      data.set(key, value);\n\t      this.size += data.size == size ? 0 : 1;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values == null ? 0 : values.length;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      var data = this.__data__ = new ListCache(entries);\n\t      this.size = data.size;\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          result = data['delete'](key);\n\t\n\t      this.size = data.size;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__;\n\t      if (data instanceof ListCache) {\n\t        var pairs = data.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          this.size = ++data.size;\n\t          return this;\n\t        }\n\t        data = this.__data__ = new MapCache(pairs);\n\t      }\n\t      data.set(key, value);\n\t      this.size = data.size;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var isArr = isArray(value),\n\t          isArg = !isArr && isArguments(value),\n\t          isBuff = !isArr && !isArg && isBuffer(value),\n\t          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t          skipIndexes = isArr || isArg || isBuff || isType,\n\t          result = skipIndexes ? baseTimes(value.length, String) : [],\n\t          length = result.length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (\n\t               // Safari 9 has enumerable `arguments.length` in strict mode.\n\t               key == 'length' ||\n\t               // Node.js 0.10 has enumerable non-index properties on buffers.\n\t               (isBuff && (key == 'offset' || key == 'parent')) ||\n\t               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t               // Skip index properties.\n\t               isIndex(key, length)\n\t            ))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sample` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function arraySample(array) {\n\t      var length = array.length;\n\t      return length ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sampleSize` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function arraySampleSize(array, n) {\n\t      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function arrayShuffle(array) {\n\t      return shuffleSelf(copyArray(array));\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assignIn` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssignIn(object, source) {\n\t      return object && copyObject(source, keysIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `assignValue` and `assignMergeValue` without\n\t     * value checks.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function baseAssignValue(object, key, value) {\n\t      if (key == '__proto__' && defineProperty) {\n\t        defineProperty(object, key, {\n\t          'configurable': true,\n\t          'enumerable': true,\n\t          'value': value,\n\t          'writable': true\n\t        });\n\t      } else {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = Array(length),\n\t          skip = object == null;\n\t\n\t      while (++index < length) {\n\t        result[index] = skip ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Deep clone\n\t     *  2 - Flatten inherited properties\n\t     *  4 - Clone symbols\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, bitmask, customizer, key, object, stack) {\n\t      var result,\n\t          isDeep = bitmask & CLONE_DEEP_FLAG,\n\t          isFlat = bitmask & CLONE_FLAT_FLAG,\n\t          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t          if (!isDeep) {\n\t            return isFlat\n\t              ? copySymbolsIn(value, baseAssignIn(result, value))\n\t              : copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (isSet(value)) {\n\t        value.forEach(function(subValue) {\n\t          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n\t        });\n\t\n\t        return result;\n\t      }\n\t\n\t      if (isMap(value)) {\n\t        value.forEach(function(subValue, key) {\n\t          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t        });\n\t\n\t        return result;\n\t      }\n\t\n\t      var keysFunc = isFull\n\t        ? (isFlat ? getAllKeysIn : getAllKeys)\n\t        : (isFlat ? keysIn : keys);\n\t\n\t      var props = isArr ? undefined : keysFunc(value);\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee == null ? value : iteratee(value);\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = castPath(path, object);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag` without fallbacks for buggy environments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      if (value == null) {\n\t        return value === undefined ? undefinedTag : nullTag;\n\t      }\n\t      return (symToStringTag && symToStringTag in Object(value))\n\t        ? getRawTag(value)\n\t        : objectToString(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      var func = object == null ? object : object[toKey(last(path))];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArguments`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     */\n\t    function baseIsArguments(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Unordered comparison\n\t     *  2 - Partial comparison\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, bitmask, customizer, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = objIsArr ? arrayTag : getTag(object),\n\t          othTag = othIsArr ? arrayTag : getTag(other);\n\t\n\t      objTag = objTag == argsTag ? objectTag : objTag;\n\t      othTag = othTag == argsTag ? objectTag : othTag;\n\t\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && isBuffer(object)) {\n\t        if (!isBuffer(other)) {\n\t          return false;\n\t        }\n\t        objIsArr = true;\n\t        objIsObj = false;\n\t      }\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t      }\n\t      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      baseFor(source, function(srcValue, key) {\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      }, keysIn);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = safeGet(object, key),\n\t          srcValue = safeGet(source, key),\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        var isArr = isArray(srcValue),\n\t            isBuff = !isArr && isBuffer(srcValue),\n\t            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t        newValue = srcValue;\n\t        if (isArr || isBuff || isTyped) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else if (isBuff) {\n\t            isCommon = false;\n\t            newValue = cloneBuffer(srcValue, true);\n\t          }\n\t          else if (isTyped) {\n\t            isCommon = false;\n\t            newValue = cloneTypedArray(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = [];\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          newValue = objValue;\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            newValue = initCloneObject(srcValue);\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, paths) {\n\t      return basePickBy(object, paths, function(value, path) {\n\t        return hasIn(object, path);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, paths, predicate) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var path = paths[index],\n\t            value = baseGet(object, path);\n\t\n\t        if (predicate(value, path)) {\n\t          baseSet(result, castPath(path, object), value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          } else {\n\t            baseUnset(array, index);\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      return setToString(overRest(func, start, identity), func + '');\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sample`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function baseSample(collection) {\n\t      return arraySample(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sampleSize` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function baseSampleSize(collection, n) {\n\t      var array = values(collection);\n\t      return shuffleSelf(array, baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `setToString` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetToString = !defineProperty ? identity : function(func, string) {\n\t      return defineProperty(func, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(string),\n\t        'writable': true\n\t      });\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.shuffle`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function baseShuffle(collection) {\n\t      return shuffleSelf(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array == null ? low : array.length;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array == null ? 0 : array.length,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isArray(value)) {\n\t        // Recursively convert values (susceptible to call stack limits).\n\t        return arrayMap(value, baseToString) + '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The property path to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      return object == null || delete object[toKey(last(path))];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var length = arrays.length;\n\t      if (length < 2) {\n\t        return length ? baseUniq(arrays[0]) : [];\n\t      }\n\t      var index = -1,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var array = arrays[index],\n\t            othIndex = -1;\n\t\n\t        while (++othIndex < length) {\n\t          if (othIndex != index) {\n\t            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n\t          }\n\t        }\n\t      }\n\t      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value, object) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t    }\n\t\n\t    /**\n\t     * A `baseRest` alias which can be replaced with `identity` by module\n\t     * replacement plugins.\n\t     *\n\t     * @private\n\t     * @type {Function}\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    var castRest = baseRest;\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var length = buffer.length,\n\t          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      var isNew = !object;\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        if (newValue === undefined) {\n\t          newValue = source[key];\n\t        }\n\t        if (isNew) {\n\t          baseAssignValue(object, key, newValue);\n\t        } else {\n\t          assignValue(object, key, newValue);\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Copies own and inherited symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbolsIn(source, object) {\n\t      return copyObject(source, getSymbolsIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = hasUnicode(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return flatRest(function(funcs) {\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value)) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & WRAP_ARY_FLAG,\n\t          isBind = bitmask & WRAP_BIND_FLAG,\n\t          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n\t          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & WRAP_FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return flatRest(function(iteratees) {\n\t        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return hasUnicode(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & WRAP_CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *    1 - `_.bind`\n\t     *    2 - `_.bindKey`\n\t     *    4 - `_.curry` or `_.curryRight` of a bound function\n\t     *    8 - `_.curry`\n\t     *   16 - `_.curryRight`\n\t     *   32 - `_.partial`\n\t     *   64 - `_.partialRight`\n\t     *  128 - `_.rearg`\n\t     *  256 - `_.ary`\n\t     *  512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] === undefined\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n\t     * of source objects to the destination object for all destination properties\n\t     * that resolve to `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n\t     * objects into destination objects that are passed thru.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n\t     * objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {string} key The key of the property to inspect.\n\t     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n\t     */\n\t    function customOmitClone(value) {\n\t      return isPlainObject(value) ? undefined : value;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!cacheHas(seen, othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t                  return seen.push(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          objProps = getAllKeys(object),\n\t          objLength = objProps.length,\n\t          othProps = getAllKeys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which flattens the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function flatRest(func) {\n\t      return setToString(overRest(func, undefined, flatten), func + '');\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the raw `toStringTag`.\n\t     */\n\t    function getRawTag(value) {\n\t      var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t          tag = value[symToStringTag];\n\t\n\t      try {\n\t        value[symToStringTag] = undefined;\n\t        var unmasked = true;\n\t      } catch (e) {}\n\t\n\t      var result = nativeObjectToString.call(value);\n\t      if (unmasked) {\n\t        if (isOwn) {\n\t          value[symToStringTag] = tag;\n\t        } else {\n\t          delete value[symToStringTag];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      object = Object(object);\n\t      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n\t        return propertyIsEnumerable.call(object, symbol);\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = baseGetTag(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          result = false;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result || ++index != length) {\n\t        return result;\n\t      }\n\t      length = object == null ? 0 : object.length;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = new array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return new Ctor;\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return new Ctor;\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length;\n\t      if (!length) {\n\t        return source;\n\t      }\n\t      var lastIndex = length - 1;\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      var type = typeof value;\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t\n\t      return !!length &&\n\t        (type == 'number' ||\n\t          (type != 'symbol' && reIsUint.test(value))) &&\n\t            (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.memoize` which clears the memoized function's\n\t     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @returns {Function} Returns the new memoized function.\n\t     */\n\t    function memoizeCapped(func) {\n\t      var result = memoize(func, function(key) {\n\t        if (cache.size === MAX_MEMOIZE_SIZE) {\n\t          cache.clear();\n\t        }\n\t        return key;\n\t      });\n\t\n\t      var cache = result.cache;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & WRAP_BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & WRAP_ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string using `Object.prototype.toString`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     */\n\t    function objectToString(value) {\n\t      return nativeObjectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which transforms the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @param {Function} transform The rest array transform.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function overRest(func, start, transform) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = transform(array);\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = shortOut(baseSetData);\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `func` to return `string`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setToString = shortOut(baseSetToString);\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    function setWrapToString(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that'll short out and invoke `identity` instead\n\t     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t     * milliseconds.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new shortable function.\n\t     */\n\t    function shortOut(func) {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function() {\n\t        var stamp = nativeNow(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return arguments[0];\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return func.apply(undefined, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @param {number} [size=array.length] The size of `array`.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function shuffleSelf(array, size) {\n\t      var index = -1,\n\t          length = array.length,\n\t          lastIndex = length - 1;\n\t\n\t      size = size === undefined ? length : size;\n\t      while (++index < size) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = array[rand];\n\t\n\t        array[rand] = array[index];\n\t        array[index] = value;\n\t      }\n\t      array.length = size;\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoizeCapped(function(string) {\n\t      var result = [];\n\t      if (string.charCodeAt(0) === 46 /* . */) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, subString) {\n\t        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to convert.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array == null ? 0 : array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var args = Array(length - 1),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The order and\n\t     * references of result values are determined by the first array. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs == null ? 0 : pairs.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The order and references\n\t     * of result values are determined by the first array. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      if (comparator) {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array == null ? '' : nativeJoin.call(array, separator);\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n\t      }\n\t      return value === value\n\t        ? strictLastIndexOf(array, value, index)\n\t        : baseFindIndex(array, baseIsNaN, index, true);\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = flatRest(function(array, indexes) {\n\t      var length = array == null ? 0 : array.length,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array == null ? array : nativeReverse.call(array);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept. The order of result values is determined by the order they occur\n\t     * in the array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length) ? baseUniq(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The order of result values is determined by the\n\t     * order they occur in the array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The order of result values is\n\t     * determined by the order they occur in the array.The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The order of result values is determined\n\t     * by the order they occur in the arrays. The iteratee is invoked with one\n\t     * argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The order of result values is\n\t     * determined by the order they occur in the arrays. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = flatRest(function(paths) {\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        ++result[key];\n\t      } else {\n\t        baseAssignValue(result, key, 1);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _.forEach([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        baseAssignValue(result, key, [value]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      baseAssignValue(result, key, value);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var func = isArray(collection) ? arraySample : baseSample;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n\t      return func(collection, n);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        return isString(collection) ? stringSize(collection) : collection.length;\n\t      }\n\t      var tag = getTag(collection);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return collection.size;\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, [function(o) { return o.user; }]);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = WRAP_BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            timeWaiting = wait - timeSinceLastCall;\n\t\n\t        return maxing\n\t          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n\t          : timeWaiting;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one millisecond.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, WRAP_FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result) || cache;\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Expose `MapCache`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = castRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = flatRest(function(func, indexes) {\n\t      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      return partial(castFunction(wrapper), value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t        !propertyIsEnumerable.call(value, 'callee');\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && baseGetTag(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n\t            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      var tag = getTag(value);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return !value.size;\n\t      }\n\t      if (isPrototype(value)) {\n\t        return !baseKeys(value).length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are compared by strict equality, i.e. `===`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      var tag = baseGetTag(value);\n\t      return tag == errorTag || tag == domExcTag ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t      var tag = baseGetTag(value);\n\t      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return value != null && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return value != null && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error(CORE_ERROR_TEXT);\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && baseGetTag(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t        funcToString.call(Ctor) == objectCtorString;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (symIterator && value[symIterator]) {\n\t        return iteratorToArray(value[symIterator]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return value\n\t        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n\t        : (value === 0 ? value : 0);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = flatRest(baseAt);\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties == null ? result : baseAssign(result, properties);\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(object, sources) {\n\t      object = Object(object);\n\t\n\t      var index = -1;\n\t      var length = sources.length;\n\t      var guard = length > 2 ? sources[2] : undefined;\n\t\n\t      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t        length = 1;\n\t      }\n\t\n\t      while (++index < length) {\n\t        var source = sources[index];\n\t        var props = keysIn(source);\n\t        var propsIndex = -1;\n\t        var propsLength = props.length;\n\t\n\t        while (++propsIndex < propsLength) {\n\t          var key = props[propsIndex];\n\t          var value = object[key];\n\t\n\t          if (value === undefined ||\n\t              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t            object[key] = source[key];\n\t          }\n\t        }\n\t      }\n\t\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, customDefaultsMerge);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      if (value != null &&\n\t          typeof value.toString != 'function') {\n\t        value = nativeObjectToString.call(value);\n\t      }\n\t\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (value != null &&\n\t          typeof value.toString != 'function') {\n\t        value = nativeObjectToString.call(value);\n\t      }\n\t\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, iteratee(value, key, object), value);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, key, iteratee(value, key, object));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with six arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable property paths of `object` that are not omitted.\n\t     *\n\t     * **Note:** This method is considerably slower than `_.pick`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = flatRest(function(object, paths) {\n\t      var result = {};\n\t      if (object == null) {\n\t        return result;\n\t      }\n\t      var isDeep = false;\n\t      paths = arrayMap(paths, function(path) {\n\t        path = castPath(path, object);\n\t        isDeep || (isDeep = path.length > 1);\n\t        return path;\n\t      });\n\t      copyObject(object, getAllKeysIn(object), result);\n\t      if (isDeep) {\n\t        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n\t      }\n\t      var length = paths.length;\n\t      while (length--) {\n\t        baseUnset(result, paths[length]);\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = flatRest(function(object, paths) {\n\t      return object == null ? {} : basePick(object, paths);\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t        return [prop];\n\t      });\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, props, function(value, path) {\n\t        return predicate(value, path[0]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        length = 1;\n\t        object = undefined;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object),\n\t          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t      iteratee = getIteratee(iteratee, 4);\n\t      if (accumulator == null) {\n\t        var Ctor = object && object.constructor;\n\t        if (isArrLike) {\n\t          accumulator = isArr ? new Ctor : [];\n\t        }\n\t        else if (isObject(object)) {\n\t          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t        }\n\t        else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object == null ? [] : baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n\t     * letters to basic Latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n\t     * corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (!separator && hasUnicode(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return string.split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = position == null\n\t        ? 0\n\t        : baseClamp(toInteger(position), 0, string.length);\n\t\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n\t     * // Disable support by replacing the \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (hasUnicode(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = flatRest(function(object, methodNames) {\n\t      arrayEach(methodNames, function(key) {\n\t        key = toKey(key);\n\t        baseAssignValue(object, key, bind(object[key], object));\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs == null ? 0 : pairs.length,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = (this.__filtered__ && !index)\n\t          ? new LazyWrapper(this)\n\t          : this.clone();\n\t\n\t        if (result.__filtered__) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (symIterator) {\n\t      lodash.prototype[symIterator] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  });\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)(module)))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _BoardCell = __webpack_require__(5);\n\t\n\tvar _BoardCell2 = _interopRequireDefault(_BoardCell);\n\t\n\tvar _FiguresManager = __webpack_require__(6);\n\t\n\tvar _FiguresManager2 = _interopRequireDefault(_FiguresManager);\n\t\n\tvar _Game = __webpack_require__(1);\n\t\n\tvar _Game2 = _interopRequireDefault(_Game);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Board = function () {\n\t  function Board() {\n\t    _classCallCheck(this, Board);\n\t\n\t    this.cells = [];\n\t    this.selectedFigure = null;\n\t    this.element = null;\n\t    this.isBoardBlocked = false;\n\t    this.cellToSwitch = false;\n\t  }\n\t\n\t  _createClass(Board, [{\n\t    key: 'freezeClicks',\n\t    value: function freezeClicks() {\n\t      this.isBoardBlocked = true;\n\t    }\n\t  }, {\n\t    key: 'unfreezeClicks',\n\t    value: function unfreezeClicks() {\n\t      this.isBoardBlocked = false;\n\t      this.cellToSwitch = false;\n\t    }\n\t  }, {\n\t    key: 'checkPawnsToChange',\n\t    value: function checkPawnsToChange() {\n\t\n\t      var pawnToChange = void 0;\n\t\n\t      this.cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          if (cell.figure && cell.figure.type === 'Pawn') {\n\t            if (cell.figure.color === 'white' && cell.y === 7) {\n\t              pawnToChange = cell;\n\t            } else if (cell.figure.color === 'black' && cell.y === 0) {\n\t              pawnToChange = cell;\n\t            }\n\t          }\n\t        });\n\t      });\n\t\n\t      if (pawnToChange) {\n\t        this.freezeClicks();\n\t\n\t        this.cellToSwitch = pawnToChange;\n\t\n\t        if (pawnToChange.figure.color === 'white' && _FiguresManager2.default.beatWhiteBoard.length) {\n\t          _FiguresManager2.default.chooseWhite();\n\t        } else if (_FiguresManager2.default.beatBlackBoard.length) {\n\t          _FiguresManager2.default.chooseBlack();\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'renderBoard',\n\t    value: function renderBoard() {\n\t\n\t      var board = document.getElementById('board');\n\t\n\t      this.getCells();\n\t\n\t      this.cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          board.appendChild(cell.element);\n\t        });\n\t      });\n\t\n\t      this.element = board;\n\t    }\n\t  }, {\n\t    key: 'renderOnBoard',\n\t    value: function renderOnBoard(figure, x, y) {\n\t      this.cells[y][x].setFigure(_Game2.default.getInitialFigure({ x: x, y: y, type: figure.type, color: figure.color, id: figure.id }));\n\t    }\n\t  }, {\n\t    key: 'getCells',\n\t    value: function getCells() {\n\t      var white = 'white',\n\t          black = 'black';\n\t\n\t      var arr = [];\n\t\n\t      for (var i = 0; i < 8; i++) {\n\t        if (i % 2 === 0) {\n\t          arr.push(this.getRow(i, white, black));\n\t        } else {\n\t          arr.push(this.getRow(i, black, white));\n\t        }\n\t      }\n\t\n\t      this.cells = arr;\n\t    }\n\t  }, {\n\t    key: 'getRow',\n\t    value: function getRow(y, firstColor, secondColor) {\n\t      var arr = [];\n\t\n\t      for (var i = 0; i < 8; i++) {\n\t\n\t        if (i % 2 === 0) {\n\t          arr.push(new _BoardCell2.default(firstColor, i, y));\n\t        } else {\n\t          arr.push(new _BoardCell2.default(secondColor, i, y));\n\t        }\n\t      }\n\t      return arr;\n\t    }\n\t  }]);\n\t\n\t  return Board;\n\t}();\n\t\n\texports.default = Board;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Game = __webpack_require__(1);\n\t\n\tvar _Game2 = _interopRequireDefault(_Game);\n\t\n\tvar _FiguresManager = __webpack_require__(6);\n\t\n\tvar _FiguresManager2 = _interopRequireDefault(_FiguresManager);\n\t\n\tvar _lodash = __webpack_require__(2);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BoardCell = function () {\n\t  function BoardCell(color, x, y) {\n\t    _classCallCheck(this, BoardCell);\n\t\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.figure = null;\n\t    this.element = this.createCell(color);\n\t    this.available = null;\n\t  }\n\t\n\t  _createClass(BoardCell, [{\n\t    key: 'createCell',\n\t    value: function createCell(color) {\n\t      var cell = document.createElement('div');\n\t      cell.className = 'block ' + color;\n\t      cell.dataset.x = this.x;\n\t      cell.dataset.y = this.y;\n\t      cell.style.left = this.x * 70 + 'px';\n\t      cell.style.top = this.y * 70 + 'px';\n\t      this.setCellOnClick(cell);\n\t\n\t      return cell;\n\t    }\n\t  }, {\n\t    key: 'setFigure',\n\t    value: function setFigure(figure) {\n\t      this.figure = figure;\n\t      this.renderInitialFigure();\n\t    }\n\t  }, {\n\t    key: 'setCellOnClick',\n\t    value: function setCellOnClick(cell) {\n\t      cell.addEventListener('click', function (e) {\n\t\n\t        if (_Game2.default.board.isBoardBlocked) return;\n\t\n\t        var targetCell = e.target;\n\t        var currentFigure = _lodash2.default.cloneDeep(_Game2.default.selectedFigure);\n\t        var currentCell = _FiguresManager2.default.findCellByCoords(targetCell.dataset.y, targetCell.dataset.x);\n\t\n\t        if (_Game2.default.selectedFigure && currentCell.available) {\n\t          _FiguresManager2.default.removeFigureFromCell(currentFigure.y, currentFigure.x);\n\t\n\t          _FiguresManager2.default.moveFigure({ x: targetCell.dataset.x, y: targetCell.dataset.y }, currentFigure);\n\t          currentCell.figure = currentFigure;\n\t          _Game2.default.selectedFigure = null;\n\t\n\t          _Game2.default.turnEnd();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setFigureOnClick',\n\t    value: function setFigureOnClick() {\n\t      var _this = this;\n\t\n\t      this.figure.element.addEventListener('click', function (e) {\n\t\n\t        if (_Game2.default.board.isBoardBlocked) return;\n\t\n\t        var targetFigure = e.target;\n\t\n\t        if (!_this.isAvailable(targetFigure.dataset)) {\n\t          _Game2.default.board.cells.forEach(function (row) {\n\t            row.forEach(function (cell) {\n\t              cell.removeAvailable();\n\t            });\n\t          });\n\t\n\t          var currentFigureCell = _FiguresManager2.default.findFigureByCoords(targetFigure.dataset.y, targetFigure.dataset.x);\n\t\n\t          _Game2.default.selectedFigure = _lodash2.default.cloneDeep(currentFigureCell.figure);\n\t\n\t          if (_Game2.default.selectedFigure.color === _Game2.default.turn) {\n\t            _this.setAvailableNextCells(currentFigureCell);\n\t            _Game2.default.savePreviousState();\n\t          }\n\t        } else {\n\t          var _currentFigureCell = _FiguresManager2.default.findFigureByCoords(targetFigure.dataset.y, targetFigure.dataset.x);\n\t\n\t          _FiguresManager2.default.beatFigure(_currentFigureCell);\n\t          _Game2.default.turnEnd();\n\t        }\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setAvailableNextCells',\n\t    value: function setAvailableNextCells(currentFigureCell) {\n\t      currentFigureCell.figure.searchNextAvailablePosition(_Game2.default.board.cells);\n\t      currentFigureCell.figure.nextAvailableCells.forEach(function (cell) {\n\t        cell.setAvailable();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setAvailable',\n\t    value: function setAvailable() {\n\t      this.element.classList.add('available');\n\t      this.available = true;\n\t    }\n\t  }, {\n\t    key: 'removeAvailable',\n\t    value: function removeAvailable() {\n\t      this.element.classList.remove('available');\n\t      this.available = false;\n\t    }\n\t  }, {\n\t    key: 'isEmpty',\n\t    value: function isEmpty() {\n\t      return !this.figure;\n\t    }\n\t  }, {\n\t    key: 'isAvailable',\n\t    value: function isAvailable(figure) {\n\t      return _Game2.default.board.cells[figure.y][figure.x].available;\n\t    }\n\t  }, {\n\t    key: 'renderInitialFigure',\n\t    value: function renderInitialFigure() {\n\t      var figureDiv = document.createElement('div');\n\t      figureDiv.className = 'figure';\n\t      figureDiv.style.backgroundPosition = this.figure.position;\n\t      figureDiv.style.left = this.x * 70 + 'px';\n\t      figureDiv.style.top = this.y * 70 + 'px';\n\t      figureDiv.dataset.x = this.x;\n\t      figureDiv.dataset.y = this.y;\n\t      figureDiv.id = this.figure.id;\n\t\n\t      this.figure.element = figureDiv;\n\t      this.setFigureOnClick();\n\t\n\t      _Game2.default.board.element.appendChild(this.figure.element);\n\t    }\n\t  }]);\n\t\n\t  return BoardCell;\n\t}();\n\t\n\texports.default = BoardCell;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Game = __webpack_require__(1);\n\t\n\tvar _Game2 = _interopRequireDefault(_Game);\n\t\n\tvar _lodash = __webpack_require__(2);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar FiguresManager = function () {\n\t  function FiguresManager() {\n\t    _classCallCheck(this, FiguresManager);\n\t\n\t    this.beatedBlackFigures = [];\n\t    this.beatedWhiteFigures = [];\n\t    this.beatBlackBoard = document.getElementById('beatBlack');\n\t    this.blackAvailable = false;\n\t    this.beatWhiteBoard = document.getElementById('beatWhite');\n\t    this.whiteAvailable = false;\n\t  }\n\t\n\t  _createClass(FiguresManager, [{\n\t    key: 'chooseBlack',\n\t    value: function chooseBlack() {\n\t      this.beatBlackBoard.classList.add('available');\n\t      this.blackAvailable = true;\n\t    }\n\t  }, {\n\t    key: 'chooseWhite',\n\t    value: function chooseWhite() {\n\t      this.beatWhiteBoard.classList.add('available');\n\t      this.whiteAvailable = true;\n\t    }\n\t  }, {\n\t    key: 'removeFigureFromCell',\n\t    value: function removeFigureFromCell(y, x) {\n\t      _Game2.default.board.cells[y][x].figure = null;\n\t    }\n\t  }, {\n\t    key: 'removeFigureFromBoard',\n\t    value: function removeFigureFromBoard(y, x, currentFigureCell) {\n\t      currentFigureCell.figure.element.remove();\n\t\n\t      if (currentFigureCell.figure.color === 'white') {\n\t        this.renderFigureOnBeatBoard(currentFigureCell.figure);\n\t        this.beatedWhiteFigures.push(currentFigureCell.figure);\n\t      } else {\n\t        this.renderFigureOnBeatBoard(currentFigureCell.figure);\n\t        this.beatedBlackFigures.push(currentFigureCell.figure);\n\t      }\n\t      this.removeFigureFromCell(y, x);\n\t    }\n\t  }, {\n\t    key: 'beatFigure',\n\t    value: function beatFigure(currentFigureCell) {\n\t      var currentFigure = _lodash2.default.cloneDeep(_Game2.default.selectedFigure);\n\t\n\t      this.removeFigureFromBoard(currentFigure.y, currentFigure.x, currentFigureCell);\n\t\n\t      this.moveFigure(currentFigureCell.figure, currentFigure);\n\t      currentFigureCell.figure = _lodash2.default.cloneDeep(currentFigure);\n\t\n\t      _Game2.default.selectedFigure = null;\n\t    }\n\t  }, {\n\t    key: 'moveFigure',\n\t    value: function moveFigure(cell, figure) {\n\t      figure.x = parseInt(cell.x);\n\t      figure.y = parseInt(cell.y);\n\t      figure.element.style.left = cell.x * 70 + 'px';\n\t      figure.element.style.top = cell.y * 70 + 'px';\n\t\n\t      figure.element.dataset.x = cell.x;\n\t      figure.element.dataset.y = cell.y;\n\t\n\t      if (figure.isFirstStep) figure.isFirstStep = false;\n\t    }\n\t  }, {\n\t    key: 'findFigureByCoords',\n\t    value: function findFigureByCoords(y, x) {\n\t\n\t      var currentCell = void 0;\n\t\n\t      _Game2.default.board.cells.forEach(function (rows) {\n\t        rows.forEach(function (cell) {\n\t          if (cell.figure) {\n\t            if (cell.figure.y == y && cell.figure.x == x) {\n\t              currentCell = cell;\n\t            }\n\t          }\n\t        });\n\t      });\n\t\n\t      return currentCell;\n\t    }\n\t  }, {\n\t    key: 'findCellByCoords',\n\t    value: function findCellByCoords(y, x) {\n\t\n\t      var currentCell = void 0;\n\t\n\t      _Game2.default.board.cells.forEach(function (rows) {\n\t        rows.forEach(function (cell) {\n\t          if (cell.y == y && cell.x == x) {\n\t            currentCell = cell;\n\t          }\n\t        });\n\t      });\n\t\n\t      return currentCell;\n\t    }\n\t  }, {\n\t    key: 'renderFigureOnBeatBoard',\n\t    value: function renderFigureOnBeatBoard(figure) {\n\t      var _this = this;\n\t\n\t      var figureDiv = document.createElement('div'),\n\t          isWhite = figure.color === 'white',\n\t          boardLength = isWhite ? this.beatedWhiteFigures.length : this.beatedBlackFigures.length;\n\t\n\t      figureDiv.className = 'figure';\n\t      figureDiv.style.backgroundPosition = figure.position;\n\t      figureDiv.style.left = boardLength > 7 ? (boardLength - 8) * 70 + 'px' : boardLength * 70 + 'px';\n\t      figureDiv.style.top = boardLength > 7 ? 70 + 'px' : 0 + 'px';\n\t\n\t      figureDiv.addEventListener('click', function (e) {\n\t\n\t        if (isWhite) {\n\t          if (!_this.whiteAvailable) return;\n\t        } else {\n\t          if (!_this.blackAvailable) return;\n\t        }\n\t\n\t        var _game$board$cellToSwi = _Game2.default.board.cellToSwitch,\n\t            x = _game$board$cellToSwi.x,\n\t            y = _game$board$cellToSwi.y;\n\t\n\t\n\t        _Game2.default.board.cellToSwitch.figure.element.remove();\n\t\n\t        _Game2.default.board.renderOnBoard(figure, x, y);\n\t\n\t        figureDiv.remove();\n\t\n\t        _Game2.default.board.unfreezeClicks();\n\t\n\t        if (isWhite) {\n\t          _this.beatWhiteBoard.classList.remove('available');\n\t        } else {\n\t          _this.beatBlackBoard.classList.remove('available');\n\t        }\n\t      });\n\t\n\t      if (isWhite) {\n\t        this.beatWhiteBoard.appendChild(figureDiv);\n\t      } else {\n\t        this.beatBlackBoard.appendChild(figureDiv);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return FiguresManager;\n\t}();\n\t\n\tvar figuresManager = new FiguresManager();\n\t\n\texports.default = figuresManager;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Pawn = function () {\n\t  function Pawn(color, x, y, id) {\n\t    _classCallCheck(this, Pawn);\n\t\n\t    this.id = id;\n\t    this.type = 'Pawn';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = null;\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t    this.isFirstStep = true;\n\t  }\n\t\n\t  _createClass(Pawn, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-595px -116px';\n\t      } else {\n\t        return '-595px -19px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells) {\n\t      var _this = this;\n\t\n\t      var forwardCells = this.forwardCell(cells),\n\t          otherCells = this.toBeat(cells),\n\t          availableCells = [];\n\t\n\t      forwardCells.forEach(function (item) {\n\t        if (item.isEmpty()) {\n\t          availableCells.push(item);\n\t        }\n\t      });\n\t\n\t      otherCells.forEach(function (cell) {\n\t        if (cell) {\n\t          if (!cell.isEmpty() && cell.figure.color !== _this.color) {\n\t            availableCells.push(cell);\n\t          }\n\t        }\n\t      });\n\t\n\t      this.nextAvailableCells = availableCells;\n\t    }\n\t  }, {\n\t    key: 'forwardCell',\n\t    value: function forwardCell(cells) {\n\t      if (this.color === 'white') {\n\t        return this.isFirstStep ? this.getFirsForwardCell(cells, this.color) : [cells[this.y + 1][this.x]];\n\t      } else {\n\t        return this.isFirstStep ? this.getFirsForwardCell(cells, this.color) : [cells[this.y - 1][this.x]];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getFirsForwardCell',\n\t    value: function getFirsForwardCell(cells, color) {\n\t      if (color === 'white' && cells[this.y + 1][this.x].isEmpty()) {\n\t        return [cells[this.y + 1][this.x], cells[this.y + 2][this.x]];\n\t      } else if (color === 'white' && !cells[this.y + 1][this.x].isEmpty()) {\n\t        return [];\n\t      } else if (color === 'black' && cells[this.y - 1][this.x].isEmpty()) {\n\t        return [cells[this.y - 1][this.x], cells[this.y - 2][this.x]];\n\t      } else if (color === 'black' && cells[this.y - 1][this.x].isEmpty()) {\n\t        return [];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toBeat',\n\t    value: function toBeat(cells) {\n\t      var toBeatArr = [];\n\t\n\t      if (this.color === 'white' && cells[this.y + 1]) {\n\t        toBeatArr.push(cells[this.y + 1][this.x + 1]);\n\t        toBeatArr.push(cells[this.y + 1][this.x - 1]);\n\t      } else if (cells[this.y - 1]) {\n\t        toBeatArr.push(cells[this.y - 1][this.x + 1]);\n\t        toBeatArr.push(cells[this.y - 1][this.x - 1]);\n\t      }\n\t\n\t      return toBeatArr;\n\t    }\n\t  }]);\n\t\n\t  return Pawn;\n\t}();\n\t\n\texports.default = Pawn;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Rook = function () {\n\t  function Rook(color, x, y, id) {\n\t    _classCallCheck(this, Rook);\n\t\n\t    this.id = id;\n\t    this.type = 'Rook';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = null;\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t  }\n\t\n\t  _createClass(Rook, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-263px -116px';\n\t      } else {\n\t        return '-263px -19px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells) {\n\t      this.nextAvailableCells = this.findAll(cells);\n\t    }\n\t  }, {\n\t    key: 'findAll',\n\t    value: function findAll(cells) {\n\t      var _this = this;\n\t\n\t      var xArr = [],\n\t          yArr = [];\n\t\n\t      if (cells[this.y]) {\n\t        cells[this.y].forEach(function (item) {\n\t          if (item.x !== _this.x) {\n\t            xArr.push(item);\n\t          }\n\t        });\n\t      }\n\t\n\t      cells.forEach(function (row) {\n\t        row.forEach(function (item) {\n\t          if (item.y !== _this.y && _this.x === item.x) {\n\t            yArr.push(item);\n\t          }\n\t        });\n\t      });\n\t\n\t      return this.getAvailableOnly(xArr, yArr);\n\t    }\n\t  }, {\n\t    key: 'getAvailableOnly',\n\t    value: function getAvailableOnly(xArr, yArr) {\n\t      var available = [];\n\t\n\t      for (var i = this.x; i < xArr.length; i++) {\n\t        //to right\n\t        if (xArr[i]) {\n\t          if (xArr[i].x > this.x && xArr[i].isEmpty()) {\n\t            available.push(xArr[i]);\n\t          }\n\t          if (xArr[i].x > this.x && !xArr[i].isEmpty()) {\n\t            if (xArr[i].figure.color !== this.color) {\n\t              available.push(xArr[i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i = this.x - 1; _i >= 0; _i--) {\n\t        //to left\n\t\n\t        if (xArr[_i]) {\n\t          if (xArr[_i].x < this.x && xArr[_i].isEmpty()) {\n\t            available.push(xArr[_i]);\n\t          }\n\t          if (xArr[_i].x < this.x && !xArr[_i].isEmpty()) {\n\t            if (xArr[_i].figure.color !== this.color) {\n\t              available.push(xArr[_i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i2 = this.y; _i2 >= 0; _i2--) {\n\t        //to top\n\t        if (yArr[_i2]) {\n\t          if (yArr[_i2].y < this.y && yArr[_i2].isEmpty()) {\n\t            available.push(yArr[_i2]);\n\t          }\n\t          if (yArr[_i2].y < this.y && !yArr[_i2].isEmpty()) {\n\t            if (yArr[_i2].figure.color !== this.color) {\n\t              available.push(yArr[_i2]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _i3 = this.y; _i3 < yArr.length; _i3++) {\n\t        //to bottom\n\t        if (yArr[_i3]) {\n\t          if (yArr[_i3].y > this.y && yArr[_i3].isEmpty()) {\n\t            available.push(yArr[_i3]);\n\t          }\n\t\n\t          if (yArr[_i3].y > this.y && !yArr[_i3].isEmpty()) {\n\t\n\t            if (yArr[_i3].figure.color !== this.color) {\n\t              available.push(yArr[_i3]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }]);\n\t\n\t  return Rook;\n\t}();\n\t\n\texports.default = Rook;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Horse = function () {\n\t  function Horse(color, x, y, id) {\n\t    _classCallCheck(this, Horse);\n\t\n\t    this.id = id;\n\t    this.type = 'Horse';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = [];\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t    this.isFirstStep = true;\n\t  }\n\t\n\t  _createClass(Horse, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-484px -116px';\n\t      } else {\n\t        return '-484px -22px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells) {\n\t      this.nextAvailableCells = [];\n\t      this.nextAvailableCells = this.nextAvailableCells.concat(this.findAll(cells));\n\t    }\n\t  }, {\n\t    key: 'findAll',\n\t    value: function findAll(cells) {\n\t      var horseGCells = [],\n\t          firstCell = cells[this.y + 2] && cells[this.y + 2][this.x + 1],\n\t          secondCell = cells[this.y + 2] && cells[this.y + 2][this.x - 1],\n\t          thirdCell = cells[this.y - 2] && cells[this.y - 2][this.x + 1],\n\t          fourthCell = cells[this.y - 2] && cells[this.y - 2][this.x - 1],\n\t          fifthCell = cells[this.y + 1] && cells[this.y + 1][this.x + 2],\n\t          sixthCell = cells[this.y + 1] && cells[this.y + 1][this.x - 2],\n\t          seventhCell = cells[this.y - 1] && cells[this.y - 1][this.x + 2],\n\t          eightCell = cells[this.y - 1] && cells[this.y - 1][this.x - 2];\n\t\n\t      if (firstCell) {\n\t        if (!firstCell.isEmpty()) {\n\t          this.toBeat(firstCell);\n\t        } else {\n\t          horseGCells.push(firstCell);\n\t        }\n\t      }\n\t\n\t      if (secondCell) {\n\t        if (!secondCell.isEmpty()) {\n\t          this.toBeat(secondCell);\n\t        } else {\n\t          horseGCells.push(secondCell);\n\t        }\n\t      }\n\t\n\t      if (thirdCell) {\n\t        if (!thirdCell.isEmpty()) {\n\t          this.toBeat(thirdCell);\n\t        } else {\n\t          horseGCells.push(thirdCell);\n\t        }\n\t      }\n\t\n\t      if (fourthCell) {\n\t        if (!fourthCell.isEmpty()) {\n\t          this.toBeat(fourthCell);\n\t        } else {\n\t          horseGCells.push(fourthCell);\n\t        }\n\t      }\n\t\n\t      if (fifthCell) {\n\t        if (!fifthCell.isEmpty()) {\n\t          this.toBeat(fifthCell);\n\t        } else {\n\t          horseGCells.push(fifthCell);\n\t        }\n\t      }\n\t\n\t      if (sixthCell) {\n\t        if (!sixthCell.isEmpty()) {\n\t          this.toBeat(sixthCell);\n\t        } else {\n\t          horseGCells.push(sixthCell);\n\t        }\n\t      }\n\t\n\t      if (seventhCell) {\n\t        if (!seventhCell.isEmpty()) {\n\t          this.toBeat(seventhCell);\n\t        } else {\n\t          horseGCells.push(seventhCell);\n\t        }\n\t      }\n\t\n\t      if (eightCell) {\n\t        if (!eightCell.isEmpty()) {\n\t          this.toBeat(eightCell);\n\t        } else {\n\t          horseGCells.push(eightCell);\n\t        }\n\t      }\n\t\n\t      return horseGCells;\n\t    }\n\t  }, {\n\t    key: 'toBeat',\n\t    value: function toBeat(cell) {\n\t      if (cell.figure.color !== this.color) {\n\t        this.nextAvailableCells.push(cell);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Horse;\n\t}();\n\t\n\texports.default = Horse;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Officer = function () {\n\t  function Officer(color, x, y, id) {\n\t    _classCallCheck(this, Officer);\n\t\n\t    this.id = id;\n\t    this.type = 'Officer';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = null;\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t  }\n\t\n\t  _createClass(Officer, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-372px -116px';\n\t      } else {\n\t        return '-372px -17px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells) {\n\t      this.nextAvailableCells = this.findAll(cells);\n\t    }\n\t  }, {\n\t    key: 'findAll',\n\t    value: function findAll(cells) {\n\t      var available = [];\n\t\n\t      for (var r = 0; r < cells.length - this.y; r++) {\n\t        //to right bottom\n\t\n\t        var cell = cells[this.y + r][this.x + r];\n\t\n\t        if (cell && cell.x !== this.x && cell.y !== this.y) {\n\t          if (cell && cell.isEmpty()) {\n\t            available.push(cell);\n\t          }\n\t\n\t          if (cell && !cell.isEmpty()) {\n\t            if (cell.figure.color !== this.color) {\n\t              available.push(cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _r = 0; _r < cells.length - this.y; _r++) {\n\t        //to left bottom\n\t\n\t        var _cell = cells[this.y + _r][this.x - _r];\n\t\n\t        if (_cell && _cell.x !== this.x && _cell.y !== this.y) {\n\t          if (_cell && _cell.isEmpty()) {\n\t            available.push(_cell);\n\t          }\n\t\n\t          if (_cell && !_cell.isEmpty()) {\n\t            if (_cell.figure.color !== this.color) {\n\t              available.push(_cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xRightToTop = 1;\n\t      for (var _r2 = this.y - 1; _r2 >= 0; _r2--) {\n\t        //to right top\n\t\n\t        var _cell2 = cells[_r2][this.x + xRightToTop];\n\t        xRightToTop++;\n\t        if (_cell2 && _cell2.x !== this.x && _cell2.y !== this.y) {\n\t          if (_cell2 && _cell2.isEmpty()) {\n\t            available.push(_cell2);\n\t          }\n\t\n\t          if (_cell2 && !_cell2.isEmpty()) {\n\t            if (_cell2.figure.color !== this.color) {\n\t              available.push(_cell2);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xLeftToTop = 1;\n\t      for (var _r3 = this.y - 1; _r3 >= 0; _r3--) {\n\t        //to left top\n\t\n\t        var _cell3 = cells[_r3][this.x - xLeftToTop];\n\t        xLeftToTop++;\n\t\n\t        if (_cell3 && _cell3.x !== this.x && _cell3.y !== this.y) {\n\t          if (_cell3 && _cell3.isEmpty()) {\n\t            available.push(_cell3);\n\t          }\n\t\n\t          if (_cell3 && !_cell3.isEmpty()) {\n\t            if (_cell3.figure.color !== this.color) {\n\t              available.push(_cell3);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }]);\n\t\n\t  return Officer;\n\t}();\n\t\n\texports.default = Officer;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Queen = function () {\n\t  function Queen(color, x, y, id) {\n\t    _classCallCheck(this, Queen);\n\t\n\t    this.id = id;\n\t    this.type = 'Queen';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = null;\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t  }\n\t\n\t  _createClass(Queen, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-150px -116px';\n\t      } else {\n\t        return '-150px -16px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells) {\n\t      var rookCells = this.findAllRook(cells),\n\t          officerCells = this.findAll(cells);\n\t\n\t      this.nextAvailableCells = rookCells.concat(officerCells);\n\t    }\n\t  }, {\n\t    key: 'findAll',\n\t    value: function findAll(cells) {\n\t      var available = [];\n\t\n\t      for (var r = 0; r < cells.length - this.y; r++) {\n\t        //to right bottom\n\t\n\t        var cell = cells[this.y + r][this.x + r];\n\t\n\t        if (cell && cell.x !== this.x && cell.y !== this.y) {\n\t          if (cell && cell.isEmpty()) {\n\t            available.push(cell);\n\t          }\n\t\n\t          if (cell && !cell.isEmpty()) {\n\t            if (cell.figure.color !== this.color) {\n\t              available.push(cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _r = 0; _r < cells.length - this.y; _r++) {\n\t        //to left bottom\n\t\n\t        var _cell = cells[this.y + _r][this.x - _r];\n\t\n\t        if (_cell && _cell.x !== this.x && _cell.y !== this.y) {\n\t          if (_cell && _cell.isEmpty()) {\n\t            available.push(_cell);\n\t          }\n\t\n\t          if (_cell && !_cell.isEmpty()) {\n\t            if (_cell.figure.color !== this.color) {\n\t              available.push(_cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xRightToTop = 1;\n\t      for (var _r2 = this.y - 1; _r2 >= 0; _r2--) {\n\t        //to right top\n\t\n\t        var _cell2 = cells[_r2][this.x + xRightToTop];\n\t        xRightToTop++;\n\t        if (_cell2 && _cell2.x !== this.x && _cell2.y !== this.y) {\n\t          if (_cell2 && _cell2.isEmpty()) {\n\t            available.push(_cell2);\n\t          }\n\t\n\t          if (_cell2 && !_cell2.isEmpty()) {\n\t            if (_cell2.figure.color !== this.color) {\n\t              available.push(_cell2);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xLeftToTop = 1;\n\t      for (var _r3 = this.y - 1; _r3 >= 0; _r3--) {\n\t        //to left top\n\t\n\t        var _cell3 = cells[_r3][this.x - xLeftToTop];\n\t        xLeftToTop++;\n\t\n\t        if (_cell3 && _cell3.x !== this.x && _cell3.y !== this.y) {\n\t          if (_cell3 && _cell3.isEmpty()) {\n\t            available.push(_cell3);\n\t          }\n\t\n\t          if (_cell3 && !_cell3.isEmpty()) {\n\t            if (_cell3.figure.color !== this.color) {\n\t              available.push(_cell3);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }, {\n\t    key: 'findAllRook',\n\t    value: function findAllRook(cells) {\n\t      var _this = this;\n\t\n\t      var xArr = [],\n\t          yArr = [];\n\t\n\t      cells[this.y].forEach(function (item) {\n\t        if (item.x !== _this.x) {\n\t          xArr.push(item);\n\t        }\n\t      });\n\t\n\t      cells.forEach(function (row) {\n\t        row.forEach(function (item) {\n\t          if (item.y !== _this.y && _this.x === item.x) {\n\t            yArr.push(item);\n\t          }\n\t        });\n\t      });\n\t\n\t      return this.getAvailableOnly(xArr, yArr);\n\t    }\n\t  }, {\n\t    key: 'getAvailableOnly',\n\t    value: function getAvailableOnly(xArr, yArr) {\n\t      var available = [];\n\t\n\t      for (var i = this.x; i < xArr.length; i++) {\n\t        //to right bottom\n\t        if (xArr[i]) {\n\t          if (xArr[i].x > this.x && xArr[i].isEmpty()) {\n\t            available.push(xArr[i]);\n\t          }\n\t          if (xArr[i].x > this.x && !xArr[i].isEmpty()) {\n\t            if (xArr[i].figure.color !== this.color) {\n\t              available.push(xArr[i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i = this.x - 1; _i >= 0; _i--) {\n\t        //to left\n\t        if (xArr[_i]) {\n\t          if (xArr[_i].x < this.x && xArr[_i].isEmpty()) {\n\t            available.push(xArr[_i]);\n\t          }\n\t          if (xArr[_i].x < this.x && !xArr[_i].isEmpty()) {\n\t            if (xArr[_i].figure.color !== this.color) {\n\t              available.push(xArr[_i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i2 = this.y; _i2 >= 0; _i2--) {\n\t        //to top\n\t        if (yArr[_i2]) {\n\t          if (yArr[_i2].y < this.y && yArr[_i2].isEmpty()) {\n\t            available.push(yArr[_i2]);\n\t          }\n\t          if (yArr[_i2].y < this.y && !yArr[_i2].isEmpty()) {\n\t            if (yArr[_i2].figure.color !== this.color) {\n\t              available.push(yArr[_i2]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _i3 = this.y; _i3 < yArr.length; _i3++) {\n\t        //to bottom\n\t        if (yArr[_i3]) {\n\t          if (yArr[_i3].y > this.y && yArr[_i3].isEmpty()) {\n\t            available.push(yArr[_i3]);\n\t          }\n\t\n\t          if (yArr[_i3].y > this.y && !yArr[_i3].isEmpty()) {\n\t\n\t            if (yArr[_i3].figure.color !== this.color) {\n\t              available.push(yArr[_i3]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }]);\n\t\n\t  return Queen;\n\t}();\n\t\n\texports.default = Queen;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar King = function () {\n\t  function King(color, x, y, id) {\n\t    _classCallCheck(this, King);\n\t\n\t    this.id = id;\n\t    this.type = 'King';\n\t    this.color = color;\n\t    this.x = x;\n\t    this.y = y;\n\t    this.nextAvailableCells = null;\n\t    this.element = null;\n\t    this.position = this.getPosition();\n\t  }\n\t\n\t  _createClass(King, [{\n\t    key: 'getPosition',\n\t    value: function getPosition() {\n\t      if (this.color === 'white') {\n\t        return '-41px -116px';\n\t      } else {\n\t        return '-41px -16px';\n\t      }\n\t    }\n\t  }, {\n\t    key: 'searchNextAvailablePosition',\n\t    value: function searchNextAvailablePosition(cells, withoutOpponent) {\n\t      var rookCells = this.findAllRook(cells),\n\t          opponentAvailablePositions = !withoutOpponent && this.findOpponentAvailablePositions(cells),\n\t          officerCells = this.findAll(cells);\n\t\n\t      var availableArr = rookCells.concat(officerCells);\n\t\n\t      if (!withoutOpponent) {\n\t        var delCells = [];\n\t        var allAvailableSells = [];\n\t\n\t        availableArr.forEach(function (cell) {\n\t          opponentAvailablePositions.forEach(function (opponentCell) {\n\t            if (cell.x === opponentCell.x && cell.y === opponentCell.y) {\n\t              delCells.push(cell);\n\t            }\n\t          });\n\t        });\n\t\n\t        availableArr.forEach(function (cell) {\n\t          var choosenCell = delCells.find(function (cell2) {\n\t            return cell.x === cell2.x && cell.y === cell2.y;\n\t          });\n\t\n\t          if (!choosenCell) allAvailableSells.push(cell);\n\t        });\n\t\n\t        this.nextAvailableCells = allAvailableSells;\n\t      } else {\n\t        this.nextAvailableCells = availableArr;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'findAll',\n\t    value: function findAll(cells) {\n\t      var available = [];\n\t\n\t      for (var r = 0; r < cells.length - this.y; r++) {\n\t        //to right bottom\n\t\n\t        var cell = cells[this.y + r][this.x + r];\n\t\n\t        if (cell && cell.x !== this.x && cell.y !== this.y) {\n\t          if (cell && cell.isEmpty()) {\n\t            available.push(cell);\n\t            break;\n\t          }\n\t\n\t          if (cell && !cell.isEmpty()) {\n\t            if (cell.figure.color !== this.color) {\n\t              available.push(cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _r = 0; _r < cells.length - this.y; _r++) {\n\t        //to left bottom\n\t\n\t        var _cell = cells[this.y + _r][this.x - _r];\n\t\n\t        if (_cell && _cell.x !== this.x && _cell.y !== this.y) {\n\t          if (_cell && _cell.isEmpty()) {\n\t            available.push(_cell);\n\t            break;\n\t          }\n\t\n\t          if (_cell && !_cell.isEmpty()) {\n\t            if (_cell.figure.color !== this.color) {\n\t              available.push(_cell);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xRightToTop = 1;\n\t      for (var _r2 = this.y - 1; _r2 >= 0; _r2--) {\n\t        //to right top\n\t\n\t        var _cell2 = cells[_r2][this.x + xRightToTop];\n\t        xRightToTop++;\n\t        if (_cell2 && _cell2.x !== this.x && _cell2.y !== this.y) {\n\t          if (_cell2 && _cell2.isEmpty()) {\n\t            available.push(_cell2);\n\t            break;\n\t          }\n\t\n\t          if (_cell2 && !_cell2.isEmpty()) {\n\t            if (_cell2.figure.color !== this.color) {\n\t              available.push(_cell2);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      var xLeftToTop = 1;\n\t      for (var _r3 = this.y - 1; _r3 >= 0; _r3--) {\n\t        //to left top\n\t\n\t        var _cell3 = cells[_r3][this.x - xLeftToTop];\n\t        xLeftToTop++;\n\t\n\t        if (_cell3 && _cell3.x !== this.x && _cell3.y !== this.y) {\n\t          if (_cell3 && _cell3.isEmpty()) {\n\t            available.push(_cell3);\n\t            break;\n\t          }\n\t\n\t          if (_cell3 && !_cell3.isEmpty()) {\n\t            if (_cell3.figure.color !== this.color) {\n\t              available.push(_cell3);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }, {\n\t    key: 'findAllRook',\n\t    value: function findAllRook(cells) {\n\t      var _this = this;\n\t\n\t      var xArr = [],\n\t          yArr = [];\n\t\n\t      cells[this.y].forEach(function (item) {\n\t        if (item.x !== _this.x) {\n\t          xArr.push(item);\n\t        }\n\t      });\n\t\n\t      cells.forEach(function (row) {\n\t        row.forEach(function (item) {\n\t          if (item.y !== _this.y && _this.x === item.x) {\n\t            yArr.push(item);\n\t          }\n\t        });\n\t      });\n\t\n\t      return this.getAvailableOnly(xArr, yArr);\n\t    }\n\t  }, {\n\t    key: 'getAvailableOnly',\n\t    value: function getAvailableOnly(xArr, yArr) {\n\t      var available = [];\n\t\n\t      for (var i = this.x; i < xArr.length; i++) {\n\t        //to right bottom\n\t        if (xArr[i]) {\n\t          if (xArr[i].x > this.x && xArr[i].isEmpty()) {\n\t            available.push(xArr[i]);\n\t            break;\n\t          }\n\t          if (xArr[i].x > this.x && !xArr[i].isEmpty()) {\n\t            if (xArr[i].figure.color !== this.color) {\n\t              available.push(xArr[i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i = this.x - 1; _i >= 0; _i--) {\n\t        //to left\n\t        if (xArr[_i]) {\n\t          if (xArr[_i].x < this.x && xArr[_i].isEmpty()) {\n\t            available.push(xArr[_i]);\n\t            break;\n\t          }\n\t          if (xArr[_i].x < this.x && !xArr[_i].isEmpty()) {\n\t            if (xArr[_i].figure.color !== this.color) {\n\t              available.push(xArr[_i]);\n\t            }\n\t            break;\n\t          }\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t\n\t      for (var _i2 = this.y; _i2 >= 0; _i2--) {\n\t        //to top\n\t        if (yArr[_i2]) {\n\t          if (yArr[_i2].y < this.y && yArr[_i2].isEmpty()) {\n\t            available.push(yArr[_i2]);\n\t            break;\n\t          }\n\t          if (yArr[_i2].y < this.y && !yArr[_i2].isEmpty()) {\n\t            if (yArr[_i2].figure.color !== this.color) {\n\t              available.push(yArr[_i2]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      for (var _i3 = this.y; _i3 < yArr.length; _i3++) {\n\t        //to bottom\n\t        if (yArr[_i3]) {\n\t          if (yArr[_i3].y > this.y && yArr[_i3].isEmpty()) {\n\t            available.push(yArr[_i3]);\n\t            break;\n\t          }\n\t\n\t          if (yArr[_i3].y > this.y && !yArr[_i3].isEmpty()) {\n\t\n\t            if (yArr[_i3].figure.color !== this.color) {\n\t              available.push(yArr[_i3]);\n\t            }\n\t            break;\n\t          }\n\t        }\n\t      }\n\t\n\t      return available;\n\t    }\n\t  }, {\n\t    key: 'findOpponentAvailablePositions',\n\t    value: function findOpponentAvailablePositions(cells) {\n\t      var _this2 = this;\n\t\n\t      var opponentAvailablePositions = [];\n\t\n\t      cells.forEach(function (row) {\n\t        row.forEach(function (cell) {\n\t          if (cell.figure && cell.figure.color !== _this2.color) {\n\t            if (cell.figure.type !== 'Pawn') {\n\t              cell.figure.searchNextAvailablePosition(cells, true); // true is for King only\n\t\n\t              cell.figure.nextAvailableCells.forEach(function (item) {\n\t\n\t                if (item) {\n\t                  var existItem = opponentAvailablePositions.find(function (item2) {\n\t                    return item.x === item2.x && item.y === item2.y;\n\t                  });\n\t\n\t                  if (!existItem) opponentAvailablePositions.push(item);\n\t                }\n\t              });\n\t            } else if (cell.figure.type === 'Pawn') {\n\t\n\t              cell.figure.toBeat(cells).forEach(function (item) {\n\t\n\t                if (item) {\n\t                  var existItem = opponentAvailablePositions.find(function (item2) {\n\t                    return item.x === item2.x && item.y === item2.y;\n\t                  });\n\t\n\t                  if (!existItem) opponentAvailablePositions.push(item);\n\t                }\n\t              });\n\t            }\n\t          }\n\t        });\n\t      });\n\t\n\t      return opponentAvailablePositions;\n\t    }\n\t  }]);\n\t\n\t  return King;\n\t}();\n\t\n\texports.default = King;\n\n/***/ }\n/******/ ])\n});\n;\n"],"sourceRoot":"/source/"}